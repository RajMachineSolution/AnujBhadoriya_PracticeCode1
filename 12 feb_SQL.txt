CASE STATEMENT -:-

CASE
    WHEN condition1 THEN result1
    WHEN condition2 THEN result2
    WHEN conditionN THEN resultN
    ELSE result
END;

CREATE PROCEDURE -:-

CREATE PROCEDURE SelectAllCustomers
AS
SELECT * FROM Customers
GO;

CREATE DATABASE -:-

BACKUP DATABASE databasename
TO DISK = 'filepath'
WITH DIFFERENTIAL;

CONSTRAINTS

NOT NULL - Ensures that a column cannot have a NULL value
UNIQUE - Ensures that all values in a column are different
PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table
FOREIGN KEY - Prevents actions that would destroy links between tables
CHECK - Ensures that the values in a column satisfies a specific condition
DEFAULT - Sets a default value for a column if no value is specified
CREATE INDEX - Used to create and retrieve data from the database very quickly

INDEXES -:-

Indexes are used to retrieve data from the database more quickly than otherwise. The users cannot see the indexes, they are just used to speed up searches/queries.
			CREATE INDEX index_name
			ON table_name (column1, column2, ...);


AUTO INCREMENT Field -:-

Auto-increment allows a unique number to be generated automatically when a new record is inserted into a table.

Often this is the primary key field that we would like to be created automatically every time a new record is inserted.

SQL DATES -:-

The most difficult part when working with dates is to be sure that the format of the date you are trying to insert, matches the format of the date column in the database.

DATA FORMAT -:-

DATE - format YYYY-MM-DD
DATETIME - format: YYYY-MM-DD HH:MI:SS
TIMESTAMP - format: YYYY-MM-DD HH:MI:SS
YEAR - format YYYY or YY

ANY SYNTAX -:-

SELECT column_name(s)
FROM table_name
WHERE column_name operator ANY
  (SELECT column_name
  FROM table_name
  WHERE condition);

ALL SYNTAX -:-

SELECT column_name(s)
FROM table_name
WHERE column_name operator ALL
  (SELECT column_name
  FROM table_name
  WHERE condition);


SQL ALIASES -:-

.SQL aliases are used to give a table, or a column in a table, a temporary name.
.Aliases are often used to make column names more readable.
.An alias only exists for the duration of that query.
.An alias is created with the AS keyword.

			SELECT CustomerID AS ID
			FROM Customers;



